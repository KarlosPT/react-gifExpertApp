{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAsB9C,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SAEI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAxBc,SAAEP,GAExBF,EAAeE,EAAEQ,OAAOF,aA4BhCZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,Y,mCCtCrBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEqCC,UAAWH,GAFhD,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAIDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAiBZM,GAjBY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGnB,sBAAKgB,UAAU,yCAAf,UAEI,qBAAKC,IAAMjB,EAAMkB,IAAKR,IACtB,4BAAIA,QCJHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECHb,SAAEA,GAAe,IAAD,EAEdlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAQ,IAJ4B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA0BxC,OAnBAC,qBAAW,WACP1B,EAASC,GACR0B,MAAM,SAAAC,GAKCH,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,SAMrB,CAACtB,IAIGuB,EDlBwBK,CAAc5B,GAAjCa,EALyB,EAK9BN,KAAae,EALiB,EAKjBA,QAYpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAEjDsB,GAAW,mBAAGJ,UAAU,mCAAb,sBACb,qBAAKA,UAAU,YAAf,SAGQL,EAAOJ,KAAM,SAAAC,GAAG,OACZ,cAAC,EAAD,eAGSA,GAFGA,EAAIC,aE7B3BkB,EAAe,WAAM,MAIM/C,mBAAS,CAAC,cAJhB,mBAIvBgD,EAJuB,KAIXjD,EAJW,KAW9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAMQiD,EAAWrB,KAAK,SAAAT,GAAQ,OAEpB,aADA,CACC,EAAD,CAEIA,SAAaA,GADPA,U,MCvBlC+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.933084d2.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n\n        setInputValue( e.target.value );\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log('Submit hecho');\n\n        if( inputValue.trim().length > 2){\n            setCategories( cats => [ inputValue, ...cats ] );\n            setInputValue('');\n        }\n\n        \n    }\n\n    return (\n        <form onSubmit = { handleSubmit }>\n            {/* <h1> { inputValue } </h1> */}\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.prototype = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async ( category ) => {\n\n    const url =  `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=vVwxgION5aDVOrVOIoEOJ7vHxOTXL9zP`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    // console.log(data); \n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n\n        }\n    })\n    \n    return gifs;\n    \n\n}","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n\n    console.log(id, title, url);\n\n    return (\n        <div className=\"card animate__animated animate__bounce\"> \n            {/* {img.title} */}\n            <img src={ url } alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","// import React, { useState, useEffect } from 'react'\nimport React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n// import { getGifs } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    // const [count, setCount] =  useState(0);\n    // const [images, setImages] = useState([]);\n\n    const {data:images, loading} = useFetchGifs( category );\n\n\n    // useEffect( () =>{\n    //     getGifs( category )\n    //         .then( setImages );\n    // }, [ category ]);\n\n   \n\n    //getGifs();\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {/* { loading ? 'Cargando...' : 'Data cargada'} */}\n            { loading && <p className=\"animate__animated animate__flash\">Loanding</p>}\n            <div className=\"card-grid\">\n                \n                {\n                    images.map(  img =>(\n                        <GifGridItem \n                            key = { img.id }\n                            // img = { img }\n                            { ...img }\n                        />\n                    ))\n                }\n                              \n\n            </div>\n        </>\n        \n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading:true\n    });\n\n    useEffect( ()=>{\n        getGifs( category )\n        .then( imgs => {\n\n            // setTimeout(() => {\n                \n            //     console.log(imgs);\n                setState({\n                    data:imgs,\n                    loading:false\n                })                \n\n            // }, 3000);\n\n        })\n    }, [category])\n\n\n\n    return state;\n\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['One Punch', 'Samurai X','Dragon Ball']\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    // const handleAdd = () => {\n    //     setCategories( cats => [... categories , 'HunterXHunter']);\n    //     console.log(categories);\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr/>\n\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\n\n            {/* <oi> */}\n                {\n                    categories.map( category =>  (\n                        // <li key={ category }>{ category }</li> \n                        <GifGrid \n                            key={ category }\n                            category = { category} \n                        />\n                    ))\n                }\n            {/* </oi> */}\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp/>,\n \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}